package servlets;

import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import shared.IEmployeeDB;
import shared.IVehicleParkRentalManagement;

/**
 * Servlet implementation class ServletReturn
 */
@WebServlet("/ServletReturn")
public class ServletReturn extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	IVehicleParkRentalManagement rentalManager;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServletReturn() {
    	try {
    		rentalManager = (IVehicleParkRentalManagement) Naming.lookup("//localhost:1099/rentalmanagement");
		} catch (MalformedURLException | RemoteException | NotBoundException e) {
			e.printStackTrace();
		}
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// CALL RENT METHOD OF RentalManager
		
		String vehicleid = request.getParameter("vehicleid");
		String note = request.getParameter("note");
		String condition = request.getParameter("condition");
		
		System.out.println(" DANS SERVLET RETURN : vehicleid = "+vehicleid);
		System.out.println(" DANS SERVLET RETURN : note = "+note);
		System.out.println(" DANS SERVLET RETURN : condition = "+condition);
	
		
		int resultOfRental = rentalManager.returnCar(Long.valueOf(vehicleid), Integer.valueOf(note), condition);
		
		RequestDispatcher dispatcher;
		if (resultOfRental == 0) { // error
			dispatcher = request.getRequestDispatcher("/WEB-INF/rentalerror.html");
			dispatcher.forward(request, response);
		}
		else if (resultOfRental == 1) { // rental ok
			dispatcher = request.getRequestDispatcher("/WEB-INF/rentalvalidated.html");
			dispatcher.forward(request, response);
		}	}

}
